add neg, pos, abs to timeinstant/fixedprec/etc
add __r*__ versions for all fixedprec and date/time delta/instant ops
implement abstract base classes for fixedprec
split timeinstant class into many classes
to make fixedprec hashable (only do if decimal is hashable) can make a reduce func that reduces a fixedprec to simplest form such that all reduced fixedprec that compare equal have same internal vars
  then make timedelta and timeinstant hashable, and also date classes

timeinstant:
  add fixed-offset timezone support
  add seasonal-offset timezone support

add leap smear support
strptime support
add a bunch of funcs like setdate get/set/increment taiyear/utchour, etc. for timeinstant and date classes as well (all return a new instance since immutable)
bump up max precision on the fixedprec on julian date calculations during calculation and reduce max prec to normal after
  default true option to do this

low prio:
add leap second support to now
add default high detail tostring for tai and utc
add aliases from datetime library, maybe full compatibility class
simpledatetime/simpletimedelta wrapper around the date classes
  maybe holds a timezone value to use for setyear and stuff
support other timescales and julian dates in other timescales
  add microsoft epoch ticks, .net ticks
  add gps timescale to timescales list?
  ntp timestamps
    remove temp ntp timestamp code in auto leap seconds
  make all timescales except utc be derived from a list of offset, rate tuples; enables adding tcg, tcb, maybe time center galaxy and time comoving frame as well
  bonus is add ut1 timestamp funcs
tests:
  timeinstant: tests for leap seconds during day
  timeinstant: test for passing in non-gregoriandate into to/from date tuple

prob not doing:
add calendar functionality for isoweekdate
tests:
  date: monthly/yearly calendar generation funcs
