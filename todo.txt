test true leap second handling in windows

ut1 support
add leap smear support
strptime support

full tz support
complete all ... and notimplementederrors
  from_format_string_tai
  from_format_string_utc
  from_format_string_tz
  from_format_string_mono
  test_fixedprec_offset_to_str
  test_from_format_string_tai
  test_from_format_string_utc
  test_from_format_string_tz
  test_from_format_string_mono

low prio:
add a bunch of funcs like setdate get/set/increment taiyear/utchour, etc. for timeinstant and date classes as well (all return a new instance since immutable); or make replace function like datetime
fixedprec default max prec configurable
add var to store if leap sec array and timezones list is updated to match file, if so and file not expired, don't run parser; add force reparse option to reparse anyway, and force refresh to download data again anyway
add auto update every 30days async function that can be used in gui update app
option to cache parsed tz, leapsecs in pickle file
timeinstant: fix low precision error on from_mono_secs_since_epoch
change get utc tai offset to return a timestoragetype?
add test for dst in tzdb zones where summer/dst is in january
find listing of mappings from timezone abbreviations to timezone full names
  fix all edge cases with proleptic fixed abbreviations
support leapsecs on timezones with fractional offset by abruptly going to second 60 then going back to normal after (negative leap seconds are just a normal skip)
  can do this for leap seconds at any point in minute on utc as well; and 2nd leap second in same minute would just continue ticking past 61 where the past leap second left off
support for -00:00 offset as None
and include factory zone as result (proper handling of "factory" timezone in tzdb)
make some static methods underscore to show they are internal
error for out of bounds values in timeinstant from date tuple
support dst shifts that go across a year boundary
add leap second support to now
remove year = <>, month = <> from gregorian date repr
strftime & strptime add param for enabling custom flags like %f.6
  and add datetime's 4 custom format strings
add aliases from datetime library, maybe full compatibility class
simpledatetime/simpletimedelta wrapper around the date classes
  maybe holds a timezone value to use for setyear and stuff
support other timescales and julian dates in other timescales
  add microsoft epoch ticks, .net ticks
  add gps timescale to timescales list?
  ntp timestamps
    remove temp ntp timestamp code in auto leap seconds
  make all timescales except utc be derived from a list of offset, rate tuples; enables adding tcg, tcb, maybe time center galaxy and time comoving frame as well
  bonus is add ut1 timestamp funcs
fixedprec constructor handle real, integral
continue splitting timeinstant into many classes
split fixedprec into many classes
tests:
  timeinstant: tests for leap seconds during day
  timeinstant: test for passing in non-gregoriandate into to/from date tuple
  timeinstant: proper tests for timezone leapsecond, dst support
  timeinstant: test for fixed offset timezone support of pos/neg leap seconds
  timezone: test for tz name not just abbreviation

prob not doing:
datedelta from/to timedelta
add calendar functionality for isoweekdate
bump up max precision on the fixedprec on julian date calculations during calculation and reduce max prec to normal after
  default false option to do this
add default high detail tostring for tai and utc
timedelta/timeinstant from datetime/timedelta when doing math operations
datebase/datedelta from/to datetime.date when doing math operations
timeinstant: have _auto_reset_class_vars reset all other vars like julian date and TimeInstant static vars, or remove it to not reset the nominal vars
tests:
  date: monthly/yearly calendar generation funcs
